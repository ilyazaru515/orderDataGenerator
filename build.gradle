plugins {
	id 'java'
	id 'org.springframework.boot' version '2.5.14'
	id 'io.spring.dependency-management' version '1.1.3'
	id("org.openapi.generator") version "4.3.1"
}

group = 'postgre.goal'
version = '0.0.1-SNAPSHOT'


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

sourceSets {
	main {
		java {
			srcDirs "$buildDir/generated-sources/src/main/java", "$rootDir/src/main/java"
		}
	}
}

openApiValidate {
	inputSpec = "$rootDir/src/main/resources/model/models.yml".toString()
	recommend = true
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

	implementation 'io.swagger:swagger-annotations:1.6.2'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.1'
	implementation 'javax.validation:validation-api:2.0.1.Final'
}

task modelGenerate(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
	generatorName = "spring"

	inputSpec = "$rootDir/src/main/resources/model/models.yml".toString()
	outputDir = "$buildDir/generated-sources".toString()

	apiPackage = "postgre.goal.dataGenerator.api"
	invokerPackage = "postgre.goal.dataGenerator.invoker"
	modelPackage = "postgre.goal.dataGenerator.model"

	configOptions = [
			"dateLibrary"      : "java8",
			"reactive"         : "true",
			"interfaceOnly"    : "true",
			"useBeanValidation": "true",
			"useTags"          : "true",
			additionalModelTypeAnnotations: "@com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)"
	]
}

compileJava.dependsOn 'openApiValidate','modelGenerate'

tasks.withType(JavaCompile) {
	options.fork = true
}
tasks.named('test') {
	useJUnitPlatform()
}
